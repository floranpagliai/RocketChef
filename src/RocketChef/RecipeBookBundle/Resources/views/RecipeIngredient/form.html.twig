<table class="table">
    <thead>
    <tr>
        <th width="25%">{{ 'ingredient.name'|trans }}</th>
        <th width="9%">{{ 'ingredient.quantity'|trans }}</th>
        <th width="9%">{{ 'ingredient.unit'|trans }}</th>
        <th width="9%" class="hidden">{{ 'ingredient.price'|trans }}</th>
        <th width="9%" class="hidden">{{ 'ingredient.unit'|trans }}</th>
        <th class="btn-table"></th>
    </tr>
    </thead>

    {% macro tagCollectionItem(formData) %}
        {% if formData.ingredient.name is defined %}
            <td>{{ form_widget(formData.ingredient.name) }}</td>
        {% else %}
            <td>{{ form_widget(formData.ingredient) }}</td>
        {% endif %}
        <td>{{ form_widget(formData.qte) }} </td>
        <td>{{ form_widget(formData.unit) }}</td>
        {% if formData.ingredient.priceForUnit is defined %}
            <td class="hidden">{{ form_widget(formData.ingredient.priceForUnit) }}</td>
        {% else %}
            <td class="hidden"></td>
        {% endif %}
        {% if formData.ingredient.unit is defined %}
            <td class="hidden">{{ form_row(formData.ingredient.unit) }}</td>
        {% else %}
            <td class="hidden"></td>
        {% endif %}
    {% endmacro %}
    {% if not form.vars.valid %}
        <div class="alert alert-danger">
            {{ form_errors(form) }}
        </div>
    {% endif %}
    <tbody class="ingredients" data-prototype="{{ _self.tagCollectionItem(form.RecipeIngredient.vars.prototype)|e }}">
    {% for RecipeIngredient in form.RecipeIngredient %}
        <tr>
            {{ _self.tagCollectionItem(RecipeIngredient) }}
        </tr>
    {% endfor %}
    </tbody>
</table>

{% block page_script %}
    <script type="text/javascript">
        var collectionHolder = $('tbody.ingredients');

        // ajoute un lien « add a tag »
        var $addTagLink = $('<a href="#" class="btn btn-sm btn-primary add_tag_link"><i class="fa fa-plus"></i> Add a ingredient</a>');

        var $newLinkLi = $addTagLink;

        jQuery(document).ready(function () {
            // ajoute l'ancre « ajouter un tag » et li à la balise ul
            collectionHolder.append($newLinkLi);

            $addTagLink.on('click', function (e) {
                // empêche le lien de créer un « # » dans l'URL
                e.preventDefault();

                // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
                addTagForm(collectionHolder, $newLinkLi);
            });

            collectionHolder.find('tr').each(function () {
                addTagFormDeleteLink($(this));
            });
        });

        function addTagForm(collectionHolder, $newLinkLi) {
            // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
            var prototype = collectionHolder.attr('data-prototype');

            // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
            // la longueur de la collection courante
            var newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

            // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
            var $newFormLi = $('<tr></tr>').append(newForm);
            $newLinkLi.before($newFormLi);
            addTagFormDeleteLink($newFormLi);
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormA = $('<td class="tooltip-content"><a href="#" class="btn btn-sm btn-red btn-block" data-toggle="tooltip" ' +
                    'data-placement="top" data-original-title="Delete ingredient"><i class="fa fa-times"></i></a></td>');

            $tagFormLi.append($removeFormA);

            $removeFormA.on('click', function (e) {
                // empêche le lien de créer un « # » dans l'URL
                e.preventDefault();

                // supprime l'élément li pour le formulaire de tag
                $tagFormLi.remove();
            });
        }
    </script>
{% endblock %}